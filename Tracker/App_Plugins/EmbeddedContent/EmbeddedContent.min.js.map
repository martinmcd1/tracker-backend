{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"angular\"","webpack:///./overlays/settings.html","webpack:///external \"jQuery\"","webpack:///./groups.html","webpack:///./overlays/contenttypepicker.html","webpack:///./embeddedcontent.html","webpack:///./embeddedcontent.prevalues.html","webpack:///./main.css?7155","webpack:///./embeddedcontent.controller.js","webpack:///./embeddedcontent.prevalues.controller.js","webpack:///./embeddedcontentproperty.directive.js","webpack:///./cache.service.js","webpack:///./groups.controller.js","webpack:///./label.service.js","webpack:///./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","angular","jQuery","embedded-content__title-bar","embeddedContentTitleBar","embedded-content__title-bar-title","embeddedContentTitleBarTitle","embedded-content__description","embeddedContentDescription","embedded-content__no-data","embeddedContentNoData","embedded-content__content-type-name","embeddedContentContentTypeName","embedded-content__has-config","embeddedContentHasConfig","embedded-content__item","embeddedContentItem","embedded-content-config__item","embeddedContentConfigItem","embedded-content__item--active","embeddedContentItemActive","embedded-content__item-content-header","embeddedContentItemContentHeader","embedded-content__item-content-body","embeddedContentItemContentBody","embedded-content__properties","embeddedContentProperties","embedded-content__section-title","embeddedContentSectionTitle","embedded-content__control-bar","embeddedContentControlBar","embedded-content__control-bar--colapsed","embeddedContentControlBarColapsed","embedded-content__item-title","embeddedContentItemTitle","embedded-content__item-name","embeddedContentItemName","embedded-content__item-name--empty","embeddedContentItemNameEmpty","embedded-content__tools","embeddedContentTools","embedded-content__tools-tool","embeddedContentToolsTool","embedded-content","embeddedContent","item-has-settings","itemHasSettings","embedded-content__placeholder","embeddedContentPlaceholder","embedded-content__placeholder--small","embeddedContentPlaceholderSmall","embedded-content__add","embeddedContentAdd","embedded-content__sortable-placeholder","embeddedContentSortablePlaceholder","embedded-content__switch","embeddedContentSwitch","embedded-content__switch-label","embeddedContentSwitchLabel","embedded-content__switch-handle","embeddedContentSwitchHandle","embedded-content-config","embeddedContentConfig","show-validation","showValidation","ng-invalid","ngInvalid","control-label","controlLabel","embedded-content__content","embeddedContentContent","ng-valid","ngValid","control-group","controlGroup","property-error","propertyError","embedded-content__hasConfig","ui-sortable-helper","uiSortableHelper","trimEnd","str","strToRemove","searchString","position","length","lastIndex","indexOf","endsWith","substring","embeddedcontent_controller_EmbdeddedContentController","EmbdeddedContentController","$scope","$timeout","$interpolate","$window","angularHelper","fileManager","editorState","localizationService","contentResource","contentTypeResource","serverValidationManager","embeddedContentLabelService","_this","this","_classCallCheck","preview","label","contentReady","currentForm","getCurrentForm","draggedRteSettings","sortableOptions","distance","cursor","placeholder","handle","helper","forcePlaceholderSize","tolerance","zIndex","scrollSensitivity","cursorAt","top","left","sort","event","ui","max","external_jQuery_default","width","parseInt","css","start","e","item","context","style","display","opacity","parents","find","each","id","attr","editor","tinyMCE","editors","settings","execCommand","stop","init","$setDirty","localize","then","groupOther","hasSettings","model","description","config","minItems","allowedDocumentTypes","add","$watch","forEach","settingsTab","active","$on","$broadcast","scope","validate","x","setFiles","alias","evt","args","form","$invalid","errors","items","filter","error","propertyAlias","_loop","splits","fieldName","split","substr","errorPropertyName","errorFieldName","loaded","concat","splice","join","addPropertyError","errorMsg","newFiles","_this2","files","getFiles","map","file","$setValidity","maxItems","documentType","_this3","getScaffold","current","documentTypeAlias","data","allowEditingName","contentTypeAlias","contentTypeName","icon","published","parentId","tabs","tab","push","activate","_this4","documentTypes","docType","nameExpression","nameTemplate","toJSON","assign","index","properties","reduce","cur","obj","getPropertyLabel","$index","_this5","undefined","deletePromptChanged","deactivate","stopPropagation","deletePrompt","_this6","editSettingsOverlay","view","settings_default","a","title","external_angular_default","copy","show","submit","close","_this7","availableItems","group","prev","contentTypeOverlay","contenttypepicker_default","enableFiltering","selectedItem","_this8","maxInstances","$inject","embeddedcontent_prevalues_controller_EmbeddedContentPrevaluesController","EmbeddedContentPrevaluesController","embeddedcontent_prevalues_controller_classCallCheck","enableCollapsing","getAll","ready","documentTypeId","getById","response","groups","g","b","localeCompare","groups_default","EmbeddedContentPropertyDirective","restrict","template","link","editProperty","filesArray","slice","selectedFiles","newVal","oldVal","CacheService","entityResource","cache_service_classCallCheck","cache","isLoading","type","getOrAdd","valueFactory","fromCache","result","factory","GroupsController","groups_controller_classCallCheck","preventDefault","hasError","newItem","MultiNodeTreePickerResolver","cacheService","ids","startNode","getEntityById","entity","MediaPickerResolver","resolvers","Umbraco.MultipleMediaPicker","Umbraco.MediaPicker2","Umbraco.MultiNodeTreePicker","Umbraco.MultiNodeTreePicker2","Umbraco.TinyMCEv3","String","replace","RJP.MultiUrlPicker","LabelService","label_service_classCallCheck","label_service_createClass","resolver","controller","directive","run","$injector","has","formResource","getByGuid"],"mappings":"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","file":"EmbeddedContent.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/App_Plugins/EmbeddedContent/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = angular;","module.exports = __webpack_public_path__ + \"overlays/settings.html\";","module.exports = jQuery;","module.exports = __webpack_public_path__ + \"groups.html\";","module.exports = __webpack_public_path__ + \"overlays/contenttypepicker.html\";","module.exports = __webpack_public_path__ + \"embeddedcontent.html\";","module.exports = __webpack_public_path__ + \"embeddedcontent.prevalues.html\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedded-content__title-bar\":\"embedded-content__title-bar\",\"embeddedContentTitleBar\":\"embedded-content__title-bar\",\"embedded-content__title-bar-title\":\"embedded-content__title-bar-title\",\"embeddedContentTitleBarTitle\":\"embedded-content__title-bar-title\",\"embedded-content__description\":\"embedded-content__description\",\"embeddedContentDescription\":\"embedded-content__description\",\"embedded-content__no-data\":\"embedded-content__no-data\",\"embeddedContentNoData\":\"embedded-content__no-data\",\"embedded-content__content-type-name\":\"embedded-content__content-type-name\",\"embeddedContentContentTypeName\":\"embedded-content__content-type-name\",\"embedded-content__has-config\":\"embedded-content__has-config\",\"embeddedContentHasConfig\":\"embedded-content__hasConfig\",\"embedded-content__item\":\"embedded-content__item\",\"embeddedContentItem\":\"embedded-content__item\",\"embedded-content-config__item\":\"embedded-content-config__item\",\"embeddedContentConfigItem\":\"embedded-content-config__item\",\"embedded-content__item--active\":\"embedded-content__item--active\",\"embeddedContentItemActive\":\"embedded-content__item--active\",\"embedded-content__item-content-header\":\"embedded-content__item-content-header\",\"embeddedContentItemContentHeader\":\"embedded-content__item-content-header\",\"embedded-content__item-content-body\":\"embedded-content__item-content-body\",\"embeddedContentItemContentBody\":\"embedded-content__item-content-body\",\"embedded-content__properties\":\"embedded-content__properties\",\"embeddedContentProperties\":\"embedded-content__properties\",\"embedded-content__section-title\":\"embedded-content__section-title\",\"embeddedContentSectionTitle\":\"embedded-content__section-title\",\"embedded-content__control-bar\":\"embedded-content__control-bar\",\"embeddedContentControlBar\":\"embedded-content__control-bar\",\"embedded-content__control-bar--colapsed\":\"embedded-content__control-bar--colapsed\",\"embeddedContentControlBarColapsed\":\"embedded-content__control-bar--colapsed\",\"embedded-content__item-title\":\"embedded-content__item-title\",\"embeddedContentItemTitle\":\"embedded-content__item-title\",\"embedded-content__item-name\":\"embedded-content__item-name\",\"embeddedContentItemName\":\"embedded-content__item-name\",\"embedded-content__item-name--empty\":\"embedded-content__item-name--empty\",\"embeddedContentItemNameEmpty\":\"embedded-content__item-name--empty\",\"embedded-content__tools\":\"embedded-content__tools\",\"embeddedContentTools\":\"embedded-content__tools\",\"embedded-content__tools-tool\":\"embedded-content__tools-tool\",\"embeddedContentToolsTool\":\"embedded-content__tools-tool\",\"embedded-content\":\"embedded-content\",\"embeddedContent\":\"embedded-content\",\"item-has-settings\":\"item-has-settings\",\"itemHasSettings\":\"item-has-settings\",\"embedded-content__placeholder\":\"embedded-content__placeholder\",\"embeddedContentPlaceholder\":\"embedded-content__placeholder\",\"embedded-content__placeholder--small\":\"embedded-content__placeholder--small\",\"embeddedContentPlaceholderSmall\":\"embedded-content__placeholder--small\",\"embedded-content__add\":\"embedded-content__add\",\"embeddedContentAdd\":\"embedded-content__add\",\"embedded-content__sortable-placeholder\":\"embedded-content__sortable-placeholder\",\"embeddedContentSortablePlaceholder\":\"embedded-content__sortable-placeholder\",\"embedded-content__switch\":\"embedded-content__switch\",\"embeddedContentSwitch\":\"embedded-content__switch\",\"embedded-content__switch-label\":\"embedded-content__switch-label\",\"embeddedContentSwitchLabel\":\"embedded-content__switch-label\",\"embedded-content__switch-handle\":\"embedded-content__switch-handle\",\"embeddedContentSwitchHandle\":\"embedded-content__switch-handle\",\"embedded-content-config\":\"embedded-content-config\",\"embeddedContentConfig\":\"embedded-content-config\",\"show-validation\":\"show-validation\",\"showValidation\":\"show-validation\",\"ng-invalid\":\"ng-invalid\",\"ngInvalid\":\"ng-invalid\",\"control-label\":\"control-label\",\"controlLabel\":\"control-label\",\"embedded-content__content\":\"embedded-content__content\",\"embeddedContentContent\":\"embedded-content__content\",\"ng-valid\":\"ng-valid\",\"ngValid\":\"ng-valid\",\"control-group\":\"control-group\",\"controlGroup\":\"control-group\",\"property-error\":\"property-error\",\"propertyError\":\"property-error\",\"embedded-content__hasConfig\":\"embedded-content__hasConfig\",\"ui-sortable-helper\":\"ui-sortable-helper\",\"uiSortableHelper\":\"ui-sortable-helper\"};","import $ from 'jquery'\nimport angular from 'angular'\n\nimport settingsOverlay from './overlays/settings.html'\nimport contentTypePickerOverlay from './overlays/contenttypepicker.html'\nimport './embeddedcontent.html'\n\nfunction endsWith (str, searchString) {\n  const position = str.length - searchString.length\n  const lastIndex = str.indexOf(searchString, position)\n  return lastIndex !== -1 && lastIndex === position\n}\n\nfunction trimEnd (str, strToRemove) {\n  if (endsWith(str, strToRemove)) {\n    return str.substring(0, str.length - strToRemove.length)\n  }\n  return str\n}\n\nexport default class EmbdeddedContentController {\n  constructor ($scope, $timeout, $interpolate, $window, angularHelper, fileManager, editorState,\n    localizationService, contentResource, contentTypeResource, serverValidationManager,\n    embeddedContentLabelService) {\n    this.$scope = $scope\n    this.$timeout = $timeout\n    this.$interpolate = $interpolate\n    this.fileManager = fileManager\n    this.editorState = editorState\n    this.localizationService = localizationService\n    this.contentResource = contentResource\n    this.embeddedContentLabelService = embeddedContentLabelService\n\n    if ($scope.preview) {\n      this.label = 'Embedded content'\n      this.contentReady = true\n      return\n    }\n\n    this.currentForm = angularHelper.getCurrentForm($scope)\n    const currentForm = this.currentForm\n\n    let draggedRteSettings = {}\n    this.sortableOptions = {\n      distance: 10,\n      cursor: 'move',\n      placeholder: 'embedded-content__sortable-placeholder',\n      handle: '.embedded-content__control-bar',\n      helper: 'clone',\n      forcePlaceholderSize: true,\n      tolerance: 'pointer',\n      zIndex: 999999999999999999,\n      scrollSensitivity: 100,\n      cursorAt: {\n        top: 40,\n        left: 60\n      },\n      sort: function (event, ui) {\n        /* prevent vertical scroll out of the screen */\n        const max = $('.embedded-content').width() - 150\n        if (parseInt(ui.helper.css('left')) > max) {\n          ui.helper.css({ 'left': max + 'px' })\n        }\n        if (parseInt(ui.helper.css('left')) < 20) {\n          ui.helper.css({ 'left': 20 })\n        }\n      },\n      start: function (e, ui) {\n        // Fade out row when sorting\n        ui.item.context.style.display = 'block'\n        ui.item.context.style.opacity = '0.5'\n\n        draggedRteSettings = {}\n        ui.item.parents('.embedded-content').find('.umb-rte textarea').each(function () {\n          // remove all RTEs in the dragged row and save their settings\n          const id = $(this).attr('id')\n          const editor = $window.tinyMCE.editors.find(editor => editor.id === id)\n          if (editor) {\n            draggedRteSettings[id] = editor.settings\n            $window.tinyMCE.execCommand('mceRemoveEditor', false, id)\n          }\n        })\n      },\n      stop: function (e, ui) {\n        // Fade in row when sorting stops\n        ui.item.context.style.opacity = '1'\n\n        // reset all RTEs affected by the dragging\n        ui.item.parents('.embedded-content').find('.umb-rte textarea').each(function () {\n          const id = $(this).attr('id')\n          draggedRteSettings[id] = draggedRteSettings[id] || $window.tinyMCE.editors.find(editor => editor.id === id).settings\n          $window.tinyMCE.execCommand('mceRemoveEditor', false, id)\n          $window.tinyMCE.init(draggedRteSettings[id])\n        })\n\n        currentForm.$setDirty()\n      }\n    }\n\n    this.localizationService.localize('embeddedContent_groupOther').then(label => {\n      this.groupOther = label\n    })\n\n    this.hasSettings = false\n\n    this.label = $scope.model.label\n    this.description = $scope.model.description\n    this.config = $scope.model.config.embeddedContentConfig\n\n    if ($scope.model.value.length === 0 && this.config.minItems === 1 && this.allowedDocumentTypes.length === 1) {\n      this.add(this.allowedDocumentTypes[0])\n    }\n\n    $scope.$watch('model.value', () => {\n      this.$scope.model.value.forEach(this.init.bind(this))\n\n      this.itemHasSettings = this.$scope.model.value.find(item => item.settingsTab)\n\n      delete this.active\n    })\n\n    $scope.$on('formSubmitting', () => {\n      $scope.$broadcast('ecSync', { scope: $scope })\n      this.validate.bind(this)\n\n      const active = this.$scope.model.value.find(x => x.active)\n      if (active) {\n        this.active = active.key\n      }\n    })\n\n    $scope.$on('formSubmitted', () => {\n      this.fileManager.setFiles(this.$scope.model.alias, [])\n    })\n\n    $scope.$on('valStatusChanged', (evt, args) => {\n      // this is very ugly, but it works for now\n      if (args.form.$invalid) {\n        const errors = serverValidationManager.items.filter((error) => error.propertyAlias === this.$scope.model.alias)\n        for (let i = 0; i < errors.length; i++) {\n          const error = errors[i]\n          const splits = error.fieldName.split('item-').filter(item => item)\n          const id = error.fieldName.substr('item-'.length, 'f7ad912c-2907-4416-9b43-a38059953a80'.length)\n          const item = this.$scope.model.value.find(item => item.key === id)\n          let errorPropertyName = trimEnd(error.fieldName, '-value')\n          let errorFieldName = ''\n\n          item.loaded = true\n\n          if (splits.length > 1) {\n            errorPropertyName = trimEnd(`item-${splits[0]}`, '-')\n            errorFieldName = `item-${splits.splice(1).join('item-')}`\n          }\n\n          serverValidationManager.addPropertyError(errorPropertyName, errorFieldName, error.errorMsg)\n        }\n      }\n    })\n\n    this.contentReady = true\n  }\n\n  setFiles (newFiles) {\n    const files = this.fileManager.getFiles()\n      .filter(item => item.alias === this.$scope.model.alias)\n      .map(item => item.file)\n      .concat(newFiles)\n\n    this.fileManager.setFiles(this.$scope.model.alias, files)\n  }\n\n  validate () {\n    if (this.config.minItems && this.config.minItems > this.$scope.model.value.length) {\n      this.currentForm.minItems.$setValidity('minItems', false)\n    } else {\n      this.currentForm.minItems.$setValidity('minItems', true)\n    }\n\n    if (this.config.maxItems && this.config.maxItems < this.$scope.model.value.length) {\n      this.currentForm.maxItems.$setValidity('maxItems', false)\n    } else {\n      this.currentForm.maxItems.$setValidity('maxItems', true)\n    }\n  }\n\n  add (documentType) {\n    this.contentResource.getScaffold(this.editorState.current.id || -1, documentType.documentTypeAlias)\n      .then(data => {\n        const item = this.init({\n          key: data.key,\n          allowEditingName: documentType.allowEditingName === '1',\n          contentTypeAlias: data.contentTypeAlias,\n          contentTypeName: data.contentTypeName,\n          icon: documentType.icon,\n          published: true,\n          name: documentType.allowEditingName === '1' ? '' : documentType.name,\n          parentId: this.editorState.current.id,\n          settingsTab: data.tabs.find(tab => tab.id === documentType.settingsTab),\n          // filter out Generic Propeties tab\n          tabs: data.tabs.filter(tab => tab.alias !== 'Generic properties' && tab.id !== documentType.settingsTab)\n        })\n        this.$scope.model.value.push(item)\n        this.currentForm.$setDirty()\n        this.activate(item)\n      })\n  }\n\n  init (item) {\n    if (!item.allowEditingName) {\n      const documentType = this.config.documentTypes.find(docType => docType.documentTypeAlias === item.contentTypeAlias)\n\n      if (!documentType.nameExpression) {\n        documentType.nameExpression = this.$interpolate(documentType.nameTemplate || 'Item {{$index}}')\n      }\n\n      const nameExpression = documentType.nameExpression\n\n      delete item.name\n\n      item.toJSON = function () { return Object.assign({ name: this.name }, this) }\n\n      Object.defineProperty(item, 'name', {\n        get: () => {\n          let index = this.$scope.model.value.indexOf(item)\n\n          if (index === -1) {\n            index = this.$scope.model.value.length + 1\n          }\n\n          const properties = item.tabs\n            .reduce((cur, tab) => cur.concat(tab.properties), [])\n            .reduce((obj, property) => {\n              let alias = property.alias\n              if (alias.indexOf(`item-${item.key}-`) === 0) {\n                alias = alias.substring(`item-${item.key}-`.length)\n              }\n\n              obj[alias] = this.embeddedContentLabelService.getPropertyLabel(property)\n              return obj\n            }, {})\n\n          return nameExpression(Object.assign({}, properties, { '$index': index + 1 }))\n        }\n      })\n    }\n\n    if (this.active === item.key) {\n      this.activate(item)\n    }\n\n    return item\n  }\n\n  remove (index) {\n    this.$scope.model.value.splice(index, 1)\n    this.currentForm.$setDirty()\n  }\n\n  activate (item) {\n    item.active = true\n    item.loaded = true\n\n    this.$timeout(() => {\n      // not sure where this undefined error comes from\n      // but we need to set it to true, or else the form won't\n      // submit after a validation error\n      this.currentForm.$setValidity(undefined, true)\n    })\n  }\n\n  deactivate (item) { item.active = false }\n\n  toggle (item) {\n    if (this.deletePromptChanged) {\n      delete this.deletePromptChanged\n      return\n    }\n    if (item.active) {\n      this.deactivate(item)\n    } else {\n      this.activate(item)\n    }\n  }\n\n  togglePublished (item) { item.published = !item.published }\n\n  togglePrompt (item, event) {\n    event.stopPropagation()\n    item.deletePrompt = !item.deletePrompt\n  }\n\n  hidePrompt (item, event) {\n    item.deletePrompt = false\n\n    // Hack: umb-confirm-action => on-cancel does not expose $event, se we set deletePropmtChanged to true so we can stop the item toggle\n    this.deletePromptChanged = true\n  }\n\n  canAdd () {\n    if (this.$scope.preview) {\n      return true\n    }\n    if (this.config.maxItems && this.$scope.model.value.length >= this.config.maxItems) {\n      return false\n    }\n    return this.allowedDocumentTypes.length > 0\n  }\n\n  editSettings (item, event) {\n    event.stopPropagation()\n\n    this.editSettingsOverlay = {\n      view: settingsOverlay, // '/App_Plugins/EmbeddedContent/embeddedcontent.settings.overlay.html',\n      title: this.localizationService.localize('embeddedContent_settings'),\n      settings: angular.copy(item.settingsTab.properties),\n      event: event,\n      show: true,\n      submit: (model) => {\n        item.settingsTab.properties = model.settings\n\n        this.currentForm.$setDirty()\n\n        this.editSettingsOverlay.show = false\n        this.editSettingsOverlay = null\n      },\n      close: () => {\n        this.editSettingsOverlay.show = false\n        this.editSettingsOverlay = null\n      }\n    }\n  }\n\n  openContentTypeOverlay (event) {\n    if (this.allowedDocumentTypes.length === 1) {\n      this.add(this.allowedDocumentTypes[0])\n      return\n    }\n\n    const availableItems = this.allowedDocumentTypes.map(docType => {\n      return {\n        alias: docType.documentTypeAlias,\n        name: docType.name,\n        group: docType.group,\n        description: docType.description,\n        icon: docType.icon\n      }\n    }).reduce((prev, cur) => {\n      const group = cur.group || this.groupOther\n      if (!prev[group]) {\n        prev[group] = []\n      }\n      prev[group].push(cur)\n      return prev\n    }, {})\n\n    this.contentTypeOverlay = {\n      view: contentTypePickerOverlay, // '/App_Plugins/EmbeddedContent/contenttypepicker.overlay.html',\n      filter: this.config.enableFiltering === '1',\n      title: this.localizationService.localize('embeddedContent_chooseContentType'),\n      availableItems: availableItems,\n      event: event,\n      show: true,\n      submit: (model) => {\n        const documentType = this.config.documentTypes.find(docType => docType.documentTypeAlias === model.selectedItem.alias)\n        this.add(documentType)\n        this.contentTypeOverlay.show = false\n        this.contentTypeOverlay = null\n      }\n    }\n  }\n\n  get allowedDocumentTypes () {\n    return this.config.documentTypes\n      .filter(docType => {\n        if (!docType.maxInstances || docType.maxInstances < 1) {\n          return true\n        }\n        return this.$scope.model.value.filter(item => item.contentTypeAlias === docType.documentTypeAlias).length < docType.maxInstances\n      })\n  }\n\n  static $inject = [\n    '$scope', '$timeout', '$interpolate', '$window', 'angularHelper', 'fileManager',\n    'editorState', 'localizationService', 'contentResource', 'contentTypeResource',\n    'serverValidationManager', 'DisPlay.Umbraco.EmbeddedContent.LabelService'\n  ]\n}\n","import settingsOverlay from './overlays/settings.html'\nimport groupsPropertyEditor from './groups.html'\nimport './embeddedcontent.prevalues.html'\n\n// TODO: Needs optimisation\n\nexport default class EmbeddedContentPrevaluesController {\n  constructor ($scope, $timeout, $interpolate, angularHelper, localizationService, contentTypeResource) {\n    this.$scope = $scope\n    this.$interpolate = $interpolate\n    this.localizationService = localizationService\n    this.contentTypeResource = contentTypeResource\n\n    this.currentForm = angularHelper.getCurrentForm($scope)\n\n    if (!$scope.model.value) {\n      $scope.model.value = {\n        enableCollapsing: '1',\n        allowEditingName: '0',\n        documentTypes: []\n      }\n    }\n\n    contentTypeResource.getAll()\n      .then(data => {\n        this.documentTypes = data\n        this.$scope.model.value.documentTypes = this.$scope.model.value.documentTypes.map(this.init.bind(this)).filter(item => item)\n        this.ready = true\n      })\n  }\n\n  hasSettings () {\n    return this.$scope.model.value.minItems ||\n      this.$scope.model.value.maxItems ||\n      this.$scope.model.value.enableCollapsing !== '1'\n  }\n\n  init (item) {\n    const documentType = this.documentTypes.find(docType => docType.alias === item.documentTypeAlias)\n    if (!documentType) {\n      return\n    }\n\n    return {\n      documentTypeId: documentType.id,\n      documentTypeAlias: documentType.alias,\n      name: documentType.name,\n      icon: documentType.icon,\n      nameTemplate: item.nameTemplate,\n      allowEditingName: item.allowEditingName,\n      maxInstances: item.maxInstances,\n      group: item.group,\n      settingsTab: item.settingsTab\n    }\n  }\n\n  activate (item) {\n    if (item.tabs) {\n      item.active = true\n      item.loaded = true\n      return\n    }\n    this.contentTypeResource.getById(item.documentTypeId)\n      .then((response) => {\n        item.tabs = response.groups.map((g) => {\n          return {\n            id: g.id,\n            name: g.name\n          }\n        })\n        item.active = true\n        item.loaded = true\n      })\n  }\n\n  deactivate (item) { item.active = false }\n\n  toggle (item) {\n    if (this.deletePromptChanged) {\n      delete this.deletePromptChanged\n      return\n    }\n    if (item.active) {\n      this.deactivate(item)\n    } else {\n      this.activate(item)\n    }\n  }\n\n  add (item) {\n    const docType = this.init({\n      documentTypeAlias: item.alias\n    })\n\n    this.$scope.model.value.documentTypes.push(docType)\n    this.$scope.model.value.documentTypes.sort((a, b) => a.name.localeCompare(b.name))\n\n    this.activate(docType)\n\n    this.currentForm.$setDirty()\n  }\n\n  remove (index) {\n    this.$scope.model.value.documentTypes.splice(index, 1)\n    this.currentForm.$setDirty()\n  }\n\n  togglePrompt (item, event) {\n    event.stopPropagation()\n    item.deletePrompt = !item.deletePrompt\n  }\n\n  hidePrompt (item, event) {\n    item.deletePrompt = false\n\n    // Hack: umb-confirm-action => on-cancel does not expose $event, se we set deletePropmtChanged to true so we can stop the item toggle\n    this.deletePromptChanged = true\n  }\n\n  editSettings (event) {\n    const properties = [{\n      label: 'Minimum number of items',\n      alias: 'minItems',\n      view: 'integer',\n      value: this.$scope.model.value.minItems\n    }, {\n      label: 'Maximum number of items',\n      alias: 'maxItems',\n      view: 'integer',\n      value: this.$scope.model.value.maxItems\n    }, {\n      label: 'Enable collapsing',\n      alias: 'enableCollapsing',\n      view: 'boolean',\n      value: this.$scope.model.value.enableCollapsing\n    }, {\n      label: 'Enable filtering',\n      alias: 'enableFiltering',\n      view: 'boolean',\n      value: this.$scope.model.value.enableFiltering\n    }, {\n      label: 'Groups',\n      alias: 'groups',\n      view: groupsPropertyEditor, // '/App_Plugins/EmbeddedContent/groups.html',\n      value: this.$scope.model.value.groups,\n      config: {\n        max: 0\n      }\n    }]\n\n    this.editSettingsOverlay = {\n      view: settingsOverlay, // '/App_Plugins/EmbeddedContent/embeddedcontent.settings.overlay.html',\n      title: this.localizationService.localize('embeddedContent_settings'),\n      settings: properties,\n      event: event,\n      show: true,\n      submit: (model) => {\n        model.settings.forEach(property => {\n          this.$scope.model.value[property.alias] = property.value\n        })\n\n        this.currentForm.$setDirty()\n\n        this.editSettingsOverlay.show = false\n        this.editSettingsOverlay = null\n      },\n      close: () => {\n        this.editSettingsOverlay.show = false\n        this.editSettingsOverlay = null\n      }\n    }\n  }\n\n  openContentTypeOverlay (event) {\n    const availableItems = this.documentTypes\n      .filter(docType => !this.$scope.model.value.documentTypes.find(item => item.documentTypeAlias === docType.alias))\n      .map(docType => {\n        return {\n          alias: docType.alias,\n          name: docType.name,\n          description: docType.description,\n          icon: docType.icon\n        }\n      })\n\n    this.contentTypeOverlay = {\n      view: 'itempicker',\n      filter: true,\n      title: this.localizationService.localize('embeddedContent_addDocumentType'),\n      availableItems: availableItems,\n      event: event,\n      show: true,\n      submit: (model) => {\n        this.add(model.selectedItem)\n        this.contentTypeOverlay.show = false\n        this.contentTypeOverlay = null\n      }\n    }\n  }\n\n  static $inject = ['$scope', '$timeout', '$interpolate', 'angularHelper', 'localizationService', 'contentTypeResource']\n}\n","import angular from 'angular'\r\n\r\nexport default function EmbeddedContentPropertyDirective (fileManager) {\r\n  return {\r\n    restrict: 'E',\r\n    template: '<umb-property property=\"property\" ng-if=\"ready\"><umb-property-editor model=\"editProperty\"></umb-property-editor></umb-property>',\r\n    scope: {\r\n      setFiles: '&',\r\n      property: '=',\r\n      embeddedContentItem: '='\r\n    },\r\n\r\n    link (scope) {\r\n      scope.editProperty = angular.copy(scope.property)\r\n      const alias = scope.editProperty.alias\r\n      const id = scope.editProperty.id\r\n\r\n      // return the original alias and id when the property is serialized\r\n      scope.property.toJSON = function () { return Object.assign({}, this, { alias: alias, id: id }) }\r\n\r\n      // make sure the property alias and id is unique\r\n      scope.property.alias = scope.property.id = `item-${scope.embeddedContentItem.key}-${alias}`\r\n\r\n      scope.ready = true\r\n      scope.$on('filesSelected', (e, args) => {\r\n        const filesArray = [].slice.call(args.files).map(file => Object.assign(file, { propertyAlias: scope.property.alias }))\r\n        scope.property.selectedFiles = filesArray.map(file => file.name)\r\n        fileManager.setFiles(scope.property.alias, [])\r\n        scope.setFiles({ files: filesArray })\r\n      })\r\n\r\n      scope.$on('ecSync', () => {\r\n        scope.$broadcast('formSubmitting', { scope: scope })\r\n        scope.property.value = scope.editProperty.value\r\n      })\r\n\r\n      scope.$watch('property.value', (newVal, oldVal) => {\r\n        if (newVal !== oldVal) {\r\n          scope.editProperty.value = newVal\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nEmbeddedContentPropertyDirective.$inject = ['fileManager']\r\n","export default class CacheService {\r\n  constructor (entityResource) {\r\n    this.entityResource = entityResource\r\n\r\n    this.cache = {}\r\n    this.isLoading = false\r\n  }\r\n\r\n  getEntityById (id, type) {\r\n    return this.getOrAdd('entity', id, () => this.entityResource.getById(id, type))\r\n  }\r\n\r\n  getOrAdd (type, key, valueFactory) {\r\n    const cache = this.cache[type] || (this.cache[type] = [])\r\n    const fromCache = cache.filter(item => item.key === key)\r\n\r\n    if (fromCache.length === 1) {\r\n      return fromCache[0].value\r\n    }\r\n\r\n    if (!this.isLoading) {\r\n      this.isLoading = true\r\n\r\n      valueFactory(key).then(result => {\r\n        cache.push({ key: key, value: result })\r\n        this.isLoading = false\r\n      })\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  static factory (entityResource) {\r\n    return new CacheService(entityResource)\r\n  }\r\n}\r\n\r\nCacheService.factory.$inject = ['entityResource']\r\n","import './groups.html'\r\n\r\nexport default class GroupsController {\r\n  constructor ($scope) {\r\n    this.$scope = $scope\r\n\r\n    if (!$scope.model.value) {\r\n      $scope.model.value = []\r\n    }\r\n  }\r\n\r\n  add (event) {\r\n    event.preventDefault()\r\n\r\n    this.hasError = false\r\n\r\n    if (!this.newItem || this.$scope.model.value.indexOf(this.newItem) > -1) {\r\n      this.hasError = true\r\n      return\r\n    }\r\n\r\n    this.$scope.model.value.push(this.newItem)\r\n    this.$scope.model.value.sort((a, b) => a.localeCompare(b))\r\n\r\n    this.newItem = ''\r\n  }\r\n\r\n  remove (index, event) {\r\n    event.preventDefault()\r\n    this.$scope.model.value.splice(index, 1)\r\n  }\r\n\r\n  static $inject = [\r\n    '$scope'\r\n  ]\r\n}\r\n","const MultiNodeTreePickerResolver = (property, cacheService) => {\r\n  const ids = property.value.split(',')\r\n  let type = 'Document'\r\n\r\n  switch (property.config.startNode.type) {\r\n    case 'media':\r\n      type = 'Media'\r\n      break\r\n    case 'member':\r\n      type = 'Member'\r\n      break\r\n  }\r\n\r\n  return ids.map(id => cacheService.getEntityById(id, type))\r\n    .filter(entity => entity)\r\n    .map(entity => entity.name)\r\n    .join(', ')\r\n}\r\n\r\nconst MediaPickerResolver = (property, cacheService) => {\r\n  const ids = property.value.split(',')\r\n\r\n  return ids.map(id => cacheService.getEntityById(id, 'Media'))\r\n    .filter(entity => entity)\r\n    .map(entity => entity.name)\r\n    .join(', ')\r\n}\r\n\r\nexport const resolvers = {\r\n  'Umbraco.MultipleMediaPicker': MediaPickerResolver,\r\n  'Umbraco.MediaPicker2': MediaPickerResolver,\r\n  'Umbraco.MultiNodeTreePicker': MultiNodeTreePickerResolver,\r\n  'Umbraco.MultiNodeTreePicker2': MultiNodeTreePickerResolver,\r\n  'Umbraco.TinyMCEv3': (property, cacheService) => String(property.value).replace(/<[^>]+>/gm, ''),\r\n  'RJP.MultiUrlPicker': (property, cacheService) => property.value.map(link => link.name).join(', ')\r\n}\r\n\r\nexport class LabelService {\r\n  constructor (cacheService, resolvers) {\r\n    this.cacheService = cacheService\r\n    this.resolvers = resolvers\r\n  }\r\n\r\n  getPropertyLabel (property) {\r\n    if (!property.value) {\r\n      return ''\r\n    }\r\n\r\n    const resolver = this.resolvers[property.editor]\r\n\r\n    if (resolver) {\r\n      return resolver(property, this.cacheService)\r\n    }\r\n\r\n    return property.value\r\n  }\r\n\r\n  static factory (cacheService, resolvers) {\r\n    return new LabelService(cacheService, resolvers)\r\n  }\r\n}\r\n\r\nLabelService.factory.$inject = ['DisPlay.Umbraco.EmbeddedContent.CacheService', 'DisPlay.Umbraco.EmbeddedContent.LabelResolvers']\r\n","import angular from 'angular'\r\n\r\nimport EmbdeddedContentController from './embeddedcontent.controller'\r\nimport EmbeddedContentPrevaluesController from './embeddedcontent.prevalues.controller'\r\nimport EmbeddedContentPropertyDirective from './embeddedcontentproperty.directive'\r\nimport CacheService from './cache.service'\r\nimport GroupsController from './groups.controller'\r\nimport {LabelService, resolvers as LabelResolvers} from './label.service'\r\nimport './main.css'\r\n\r\nangular.module('umbraco')\r\n  .controller('DisPlay.Umbraco.EmbeddedContent.EmbdeddedContentController', EmbdeddedContentController)\r\n  .controller('DisPlay.Umbraco.EmbeddedContent.EmbeddedContentPrevaluesController', EmbeddedContentPrevaluesController)\r\n  .controller('DisPlay.Umbraco.EmbeddedContent.GroupsController', GroupsController)\r\n  .directive('embeddedContentProperty', EmbeddedContentPropertyDirective)\r\n  .value('DisPlay.Umbraco.EmbeddedContent.LabelResolvers', LabelResolvers)\r\n  .factory('DisPlay.Umbraco.EmbeddedContent.CacheService', CacheService.factory)\r\n  .factory('DisPlay.Umbraco.EmbeddedContent.LabelService', LabelService.factory)\r\n  .run(['$injector', ($injector) => {\r\n    if (!$injector.has('formResource')) {\r\n      return\r\n    }\r\n\r\n    const formResource = $injector.get('formResource')\r\n\r\n    LabelResolvers['UmbracoForms.FormPicker'] = (property, cacheService) => {\r\n      const fromCache = cacheService.getOrAdd('UmbracoForms.FormPicker', property.value, () => formResource.getByGuid(property.value))\r\n      return fromCache ? fromCache.data.name : null\r\n    }\r\n  }])\r\n"],"sourceRoot":""}